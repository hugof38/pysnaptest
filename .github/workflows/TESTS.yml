name: TESTS

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:

  check-rust:
    name: RustCheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  fmt-rust:
    name: Rustfmt
    needs: check-rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    needs: fmt-rust
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings
          name: Clippy Output

  tests-rust:
    name: RustTests
    needs: clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: test
    
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.28"
      
      - name: Ruff
        run: uvx ruff format --check

  test-python:
    runs-on: ubuntu-latest
    needs: lint-python
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.28"
      
      - name: Set up Python
        run: uv python install
      
      - name: Install Dependencies
        run: uv sync --all-extras --dev

      - name: Tests Python
        run: uv run pytest
